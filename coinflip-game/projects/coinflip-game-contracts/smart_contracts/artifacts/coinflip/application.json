{
    "hints": {
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "start_game(pay,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4IDB4NzA2YzYxNzk2NTcyNWY2MTVmNjE2MzYzNmY3NTZlNzQgMHg0ZTZmMjA3MDZjNjE3OTY1NzIgMHg3MDZjNjE3OTY1NzI1ZjYxNWY2MzY4NmY2OTYzNjUgMHg3NzYxNjc2NTcyIDB4NGU2Zjc0MjA2MzY4NmY3MzY1NmUyMDc5NjU3NCAweDE1MWY3Yzc1CnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2w2CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4MDJiZWNlMTEgLy8gImhlbGxvKHN0cmluZylzdHJpbmciCj09CmJueiBtYWluX2w1CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4Mjk4ODkxM2YgLy8gInN0YXJ0X2dhbWUocGF5LHN0cmluZylzdHJpbmciCj09CmJueiBtYWluX2w0CmVycgptYWluX2w0Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHN0YXJ0Z2FtZWNhc3Rlcl81CmludGNfMSAvLyAxCnJldHVybgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGhlbGxvY2FzdGVyXzQKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDEwCnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE9wdEluCj09CmJueiBtYWluX2w5CmVycgptYWluX2w5Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBvcHRpbl8yCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzEKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBoZWxsbwpoZWxsb18wOgpwcm90byAxIDEKYnl0ZWNfMCAvLyAiIgpwdXNoYnl0ZXMgMHg0ODY1NmM2YzZmMmMyMCAvLyAiSGVsbG8sICIKZnJhbWVfZGlnIC0xCmV4dHJhY3QgMiAwCmNvbmNhdApmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKbGVuCml0b2IKZXh0cmFjdCA2IDAKZnJhbWVfZGlnIDAKY29uY2F0CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIGNyZWF0ZQpjcmVhdGVfMToKcHJvdG8gMCAwCmJ5dGVjXzEgLy8gInBsYXllcl9hX2FjY291bnQiCmJ5dGVjXzIgLy8gIk5vIHBsYXllciIKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMyAvLyAicGxheWVyX2FfY2hvaWNlIgpieXRlYyA1IC8vICJOb3QgY2hvc2VuIHlldCIKYXBwX2dsb2JhbF9wdXQKcHVzaGJ5dGVzIDB4NzA2YzYxNzk2NTcyNWY2MjVmNjE2MzYzNmY3NTZlNzQgLy8gInBsYXllcl9iX2FjY291bnQiCmJ5dGVjXzIgLy8gIk5vIHBsYXllciIKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNCAvLyAid2FnZXIiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gb3B0X2luCm9wdGluXzI6CnByb3RvIDAgMAp0eG4gU2VuZGVyCnB1c2hieXRlcyAweDcwNmM2MTc5NjU3MjVmNjc2MTZkNjU3MzVmNzc2ZjZlIC8vICJwbGF5ZXJfZ2FtZXNfd29uIgppbnRjXzAgLy8gMAphcHBfbG9jYWxfcHV0CnJldHN1YgoKLy8gc3RhcnRfZ2FtZQpzdGFydGdhbWVfMzoKcHJvdG8gMiAxCmJ5dGVjXzAgLy8gIiIKdHhuIFNlbmRlcgpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uSUQKYXBwX29wdGVkX2luCi8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18xIC8vIHBheQppbnRjXzEgLy8gcGF5Cj09CmJ5dGVjIDQgLy8gIndhZ2VyIgphcHBfZ2xvYmFsX2dldAppbnRjXzAgLy8gMAo9PQomJgpmcmFtZV9kaWcgLTIKZ3R4bnMgUmVjZWl2ZXIKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKPT0KJiYKYnl0ZWNfMSAvLyAicGxheWVyX2FfYWNjb3VudCIKYXBwX2dsb2JhbF9nZXQKYnl0ZWNfMiAvLyAiTm8gcGxheWVyIgo9PQomJgpieXRlY18zIC8vICJwbGF5ZXJfYV9jaG9pY2UiCmFwcF9nbG9iYWxfZ2V0CmJ5dGVjIDUgLy8gIk5vdCBjaG9zZW4geWV0Igo9PQomJgphc3NlcnQKYnl0ZWNfMSAvLyAicGxheWVyX2FfYWNjb3VudCIKdHhuIFNlbmRlcgphcHBfZ2xvYmFsX3B1dApieXRlY18zIC8vICJwbGF5ZXJfYV9jaG9pY2UiCmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMAphcHBfZ2xvYmFsX3B1dApieXRlYyA0IC8vICJ3YWdlciIKZnJhbWVfZGlnIC0yCmd0eG5zIEFtb3VudAphcHBfZ2xvYmFsX3B1dApwdXNoYnl0ZXMgMHg1Mzc1NjM2MzY1NzM3MzY2NzU2YzZjMmUgLy8gIlN1Y2Nlc3NmdWxsLiIKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCmxlbgppdG9iCmV4dHJhY3QgNiAwCmZyYW1lX2RpZyAwCmNvbmNhdApmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBoZWxsb19jYXN0ZXIKaGVsbG9jYXN0ZXJfNDoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKZHVwCnR4bmEgQXBwbGljYXRpb25BcmdzIDEKZnJhbWVfYnVyeSAxCmZyYW1lX2RpZyAxCmNhbGxzdWIgaGVsbG9fMApmcmFtZV9idXJ5IDAKYnl0ZWMgNiAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCmNvbmNhdApsb2cKcmV0c3ViCgovLyBzdGFydF9nYW1lX2Nhc3RlcgpzdGFydGdhbWVjYXN0ZXJfNToKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKaW50Y18wIC8vIDAKYnl0ZWNfMCAvLyAiIgp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmZyYW1lX2J1cnkgMgp0eG4gR3JvdXBJbmRleAppbnRjXzEgLy8gMQotCmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgMQpndHhucyBUeXBlRW51bQppbnRjXzEgLy8gcGF5Cj09CmFzc2VydApmcmFtZV9kaWcgMQpmcmFtZV9kaWcgMgpjYWxsc3ViIHN0YXJ0Z2FtZV8zCmZyYW1lX2J1cnkgMApieXRlYyA2IC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 3,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "player_a_account": {
                    "type": "bytes",
                    "key": "player_a_account",
                    "descr": "First player's account"
                },
                "player_a_choice": {
                    "type": "bytes",
                    "key": "player_a_choice",
                    "descr": "First player's choice for the coinflip"
                },
                "player_b_account": {
                    "type": "bytes",
                    "key": "player_b_account",
                    "descr": "Second player's account"
                },
                "wager": {
                    "type": "uint64",
                    "key": "wager",
                    "descr": "Betting amount for the coinflip"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "player_games_won": {
                    "type": "uint64",
                    "key": "player_games_won",
                    "descr": "Amount of coinflip games won"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "coinflip",
        "methods": [
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "start_game",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    },
                    {
                        "type": "string",
                        "name": "choice"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Player A initiates the game, he pays the wager he wants for the game and then chooses the side of the coin (\"Heads\" or \"Tails\""
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "opt_in": "CALL"
    }
}