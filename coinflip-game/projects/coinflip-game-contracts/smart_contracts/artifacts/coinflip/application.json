{
    "hints": {
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "start_game(pay,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "join_game(pay)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "resolve(account)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "check_wins()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4IDB4NzA2YzYxNzk2NTcyNWY2MTVmNjE2MzYzNmY3NTZlNzQgMHg3MDZjNjE3OTY1NzI1ZjYxNWY2MzY4NmY2OTYzNjUgMHg0NTZkNzA3NDc5IDB4NzA2YzYxNzk2NTcyNWY2MjVmNjE2MzYzNmY3NTZlNzQgMHg3NzYxNjc2NTcyIDB4MTUxZjdjNzUgMHg0ZTZmNzQyMDYzNjg2ZjczNjU2ZTIwNzk2NTc0IDB4NzA2YzYxNzk2NTcyNWY2NzYxNmQ2NTczNWY3NzZmNmUgMHg3MDZjNjE3OTY1NzI1ZjYyNWY2MzY4NmY2OTYzNjUgMHg1NDYxNjk2YzczIDB4NDg2NTYxNjQ3MyAweDY4NjU2MTY0NzMgMHg3NDYxNjk2YzczCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2wxMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDAyYmVjZTExIC8vICJoZWxsbyhzdHJpbmcpc3RyaW5nIgo9PQpibnogbWFpbl9sMTEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgyOTg4OTEzZiAvLyAic3RhcnRfZ2FtZShwYXksc3RyaW5nKXN0cmluZyIKPT0KYm56IG1haW5fbDEwCnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4YzYyN2M0MmMgLy8gImpvaW5fZ2FtZShwYXkpc3RyaW5nIgo9PQpibnogbWFpbl9sOQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDBlMzNmZmJjIC8vICJyZXNvbHZlKGFjY291bnQpc3RyaW5nIgo9PQpibnogbWFpbl9sOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDU4NTRjYWM2IC8vICJjaGVja193aW5zKCl1aW50NjQiCj09CmJueiBtYWluX2w3CmVycgptYWluX2w3Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGNoZWNrd2luc2Nhc3Rlcl8xNwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sODoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiByZXNvbHZlY2FzdGVyXzE2CmludGNfMSAvLyAxCnJldHVybgptYWluX2w5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGpvaW5nYW1lY2FzdGVyXzE1CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMDoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKY2FsbHN1YiBzdGFydGdhbWVjYXN0ZXJfMTQKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDExOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGhlbGxvY2FzdGVyXzEzCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxMjoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQpibnogbWFpbl9sMTYKdHhuIE9uQ29tcGxldGlvbgppbnRjXzEgLy8gT3B0SW4KPT0KYm56IG1haW5fbDE1CmVycgptYWluX2wxNToKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgb3B0aW5fMgppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTY6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CmFzc2VydApjYWxsc3ViIGNyZWF0ZV8xCmludGNfMSAvLyAxCnJldHVybgoKLy8gaGVsbG8KaGVsbG9fMDoKcHJvdG8gMSAxCmJ5dGVjXzAgLy8gIiIKcHVzaGJ5dGVzIDB4NDg2NTZjNmM2ZjJjMjAgLy8gIkhlbGxvLCAiCmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMApjb25jYXQKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCmxlbgppdG9iCmV4dHJhY3QgNiAwCmZyYW1lX2RpZyAwCmNvbmNhdApmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBjcmVhdGUKY3JlYXRlXzE6CnByb3RvIDAgMApieXRlY18xIC8vICJwbGF5ZXJfYV9hY2NvdW50IgpieXRlY18zIC8vICJFbXB0eSIKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMiAvLyAicGxheWVyX2FfY2hvaWNlIgpieXRlYyA3IC8vICJOb3QgY2hvc2VuIHlldCIKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNCAvLyAicGxheWVyX2JfYWNjb3VudCIKYnl0ZWNfMyAvLyAiRW1wdHkiCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDkgLy8gInBsYXllcl9iX2Nob2ljZSIKYnl0ZWMgNyAvLyAiTm90IGNob3NlbiB5ZXQiCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDUgLy8gIndhZ2VyIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIG9wdF9pbgpvcHRpbl8yOgpwcm90byAwIDAKYnl0ZWNfMSAvLyAicGxheWVyX2FfYWNjb3VudCIKYXBwX2dsb2JhbF9nZXQKYnl0ZWNfMyAvLyAiRW1wdHkiCj09CmJueiBvcHRpbl8yX2w0CmJ5dGVjIDQgLy8gInBsYXllcl9iX2FjY291bnQiCmFwcF9nbG9iYWxfZ2V0CmJ5dGVjXzMgLy8gIkVtcHR5Igo9PQpibnogb3B0aW5fMl9sMwppbnRjXzAgLy8gMApyZXR1cm4Kb3B0aW5fMl9sMzoKYnl0ZWMgNCAvLyAicGxheWVyX2JfYWNjb3VudCIKdHhuIFNlbmRlcgphcHBfZ2xvYmFsX3B1dApiIG9wdGluXzJfbDUKb3B0aW5fMl9sNDoKYnl0ZWNfMSAvLyAicGxheWVyX2FfYWNjb3VudCIKdHhuIFNlbmRlcgphcHBfZ2xvYmFsX3B1dApvcHRpbl8yX2w1Ogp0eG4gU2VuZGVyCmJ5dGVjIDggLy8gInBsYXllcl9nYW1lc193b24iCmludGNfMCAvLyAwCmFwcF9sb2NhbF9wdXQKcmV0c3ViCgovLyBzdGFydF9nYW1lCnN0YXJ0Z2FtZV8zOgpwcm90byAyIDEKYnl0ZWNfMCAvLyAiIgp0eG4gU2VuZGVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25JRAphcHBfb3B0ZWRfaW4KLy8gdW5hdXRob3JpemVkCmFzc2VydAppbnRjXzEgLy8gcGF5CmludGNfMSAvLyBwYXkKPT0KYnl0ZWMgNSAvLyAid2FnZXIiCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAwCj09CiYmCmZyYW1lX2RpZyAtMgpndHhucyBSZWNlaXZlcgpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwo9PQomJgpieXRlY18yIC8vICJwbGF5ZXJfYV9jaG9pY2UiCmFwcF9nbG9iYWxfZ2V0CmJ5dGVjIDcgLy8gIk5vdCBjaG9zZW4geWV0Igo9PQomJgpmcmFtZV9kaWcgLTEKZXh0cmFjdCAyIDAKY2FsbHN1YiBjaGVja2NvcnJlY3RpbnB1dF8xMAppbnRjXzEgLy8gMQo9PQomJgphc3NlcnQKYnl0ZWNfMSAvLyAicGxheWVyX2FfYWNjb3VudCIKdHhuIFNlbmRlcgphcHBfZ2xvYmFsX3B1dApieXRlYyA1IC8vICJ3YWdlciIKZnJhbWVfZGlnIC0yCmd0eG5zIEFtb3VudAphcHBfZ2xvYmFsX3B1dApwdXNoYnl0ZXMgMHg1Mzc1NjM2MzY1NzM3MzY2NzU2YzZjMmUgLy8gIlN1Y2Nlc3NmdWxsLiIKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCmxlbgppdG9iCmV4dHJhY3QgNiAwCmZyYW1lX2RpZyAwCmNvbmNhdApmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBqb2luX2dhbWUKam9pbmdhbWVfNDoKcHJvdG8gMSAxCmJ5dGVjXzAgLy8gIiIKdHhuIFNlbmRlcgpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uSUQKYXBwX29wdGVkX2luCi8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18xIC8vIHBheQppbnRjXzEgLy8gcGF5Cj09CmJ5dGVjXzEgLy8gInBsYXllcl9hX2FjY291bnQiCmFwcF9nbG9iYWxfZ2V0CnR4biBTZW5kZXIKIT0KJiYKYnl0ZWMgOSAvLyAicGxheWVyX2JfY2hvaWNlIgphcHBfZ2xvYmFsX2dldApieXRlYyA3IC8vICJOb3QgY2hvc2VuIHlldCIKPT0KJiYKZnJhbWVfZGlnIC0xCmd0eG5zIFJlY2VpdmVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCj09CiYmCmJ5dGVjIDUgLy8gIndhZ2VyIgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgLTEKZ3R4bnMgQW1vdW50Cj09CiYmCmFzc2VydApieXRlYyA0IC8vICJwbGF5ZXJfYl9hY2NvdW50Igp0eG4gU2VuZGVyCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDkgLy8gInBsYXllcl9iX2Nob2ljZSIKYnl0ZWNfMiAvLyAicGxheWVyX2FfY2hvaWNlIgphcHBfZ2xvYmFsX2dldApjYWxsc3ViIGxlZnRvdmVyc2lkZV85CmFwcF9nbG9iYWxfcHV0CnB1c2hieXRlcyAweDMyMzAzMDJlIC8vICIyMDAuIgpmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKbGVuCml0b2IKZXh0cmFjdCA2IDAKZnJhbWVfZGlnIDAKY29uY2F0CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIHJlc29sdmUKcmVzb2x2ZV81Ogpwcm90byAxIDEKYnl0ZWNfMCAvLyAiIgp0eG4gU2VuZGVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25JRAphcHBfb3B0ZWRfaW4KLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18xIC8vICJwbGF5ZXJfYV9hY2NvdW50IgphcHBfZ2xvYmFsX2dldAp0eG4gU2VuZGVyCj09CmJ5dGVjIDQgLy8gInBsYXllcl9iX2FjY291bnQiCmFwcF9nbG9iYWxfZ2V0CmJ5dGVjXzMgLy8gIkVtcHR5IgohPQomJgphc3NlcnQKY2FsbHN1YiBkZWNpZGV3aW5uZXJfNwpzdG9yZSAxCmJ5dGVjIDUgLy8gIndhZ2VyIgphcHBfZ2xvYmFsX2dldApsb2FkIDEKY2FsbHN1YiBwYXlvdXRfOApsb2FkIDEKdHhuYXMgQWNjb3VudHMKYnl0ZWMgOCAvLyAicGxheWVyX2dhbWVzX3dvbiIKbG9hZCAxCnR4bmFzIEFjY291bnRzCmJ5dGVjIDggLy8gInBsYXllcl9nYW1lc193b24iCmFwcF9sb2NhbF9nZXQKaW50Y18xIC8vIDEKKwphcHBfbG9jYWxfcHV0CnJldHN1YgoKLy8gY2hlY2tfd2lucwpjaGVja3dpbnNfNjoKcHJvdG8gMCAxCmludGNfMCAvLyAwCnR4biBTZW5kZXIKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbklECmFwcF9vcHRlZF9pbgovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CnR4biBTZW5kZXIKYnl0ZWMgOCAvLyAicGxheWVyX2dhbWVzX3dvbiIKYXBwX2xvY2FsX2dldApmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyBkZWNpZGVfd2lubmVyCmRlY2lkZXdpbm5lcl83Ogpwcm90byAwIDEKYnl0ZWNfMiAvLyAicGxheWVyX2FfY2hvaWNlIgphcHBfZ2xvYmFsX2dldApieXRlYyAxMCAvLyAiVGFpbHMiCj09CmJueiBkZWNpZGV3aW5uZXJfN19sMgppbnRjXzEgLy8gMQpiIGRlY2lkZXdpbm5lcl83X2wzCmRlY2lkZXdpbm5lcl83X2wyOgppbnRjXzAgLy8gMApkZWNpZGV3aW5uZXJfN19sMzoKcmV0c3ViCgovLyBwYXlvdXQKcGF5b3V0Xzg6CnByb3RvIDIgMAppdHhuX2JlZ2luCmludGNfMSAvLyBwYXkKaXR4bl9maWVsZCBUeXBlRW51bQpmcmFtZV9kaWcgLTIKcHVzaGludCAyIC8vIDIKKgp0eG4gRmVlCi0KaXR4bl9maWVsZCBBbW91bnQKZnJhbWVfZGlnIC0xCnR4bmFzIEFjY291bnRzCml0eG5fZmllbGQgUmVjZWl2ZXIKaXR4bl9zdWJtaXQKcmV0c3ViCgovLyBsZWZ0b3Zlcl9zaWRlCmxlZnRvdmVyc2lkZV85Ogpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmJ5dGVjIDExIC8vICJIZWFkcyIKPT0KYm56IGxlZnRvdmVyc2lkZV85X2wyCmJ5dGVjIDExIC8vICJIZWFkcyIKYiBsZWZ0b3ZlcnNpZGVfOV9sMwpsZWZ0b3ZlcnNpZGVfOV9sMjoKYnl0ZWMgMTAgLy8gIlRhaWxzIgpsZWZ0b3ZlcnNpZGVfOV9sMzoKcmV0c3ViCgovLyBjaGVja19jb3JyZWN0X2lucHV0CmNoZWNrY29ycmVjdGlucHV0XzEwOgpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmNhbGxzdWIgdG9sb3dlcl8xMQpzdG9yZSAwCmxvYWQgMApieXRlYyAxMiAvLyAiaGVhZHMiCj09CmxvYWQgMApieXRlYyAxMyAvLyAidGFpbHMiCj09Cnx8CmJueiBjaGVja2NvcnJlY3RpbnB1dF8xMF9sMgppbnRjXzAgLy8gMApiIGNoZWNrY29ycmVjdGlucHV0XzEwX2w4CmNoZWNrY29ycmVjdGlucHV0XzEwX2wyOgpsb2FkIDAKYnl0ZWMgMTIgLy8gImhlYWRzIgo9PQpibnogY2hlY2tjb3JyZWN0aW5wdXRfMTBfbDcKbG9hZCAwCmJ5dGVjIDEzIC8vICJ0YWlscyIKPT0KYm56IGNoZWNrY29ycmVjdGlucHV0XzEwX2w1CmVycgpjaGVja2NvcnJlY3RpbnB1dF8xMF9sNToKYnl0ZWNfMiAvLyAicGxheWVyX2FfY2hvaWNlIgpieXRlYyAxMCAvLyAiVGFpbHMiCmFwcF9nbG9iYWxfcHV0CmNoZWNrY29ycmVjdGlucHV0XzEwX2w2OgppbnRjXzEgLy8gMQpiIGNoZWNrY29ycmVjdGlucHV0XzEwX2w4CmNoZWNrY29ycmVjdGlucHV0XzEwX2w3OgpieXRlY18yIC8vICJwbGF5ZXJfYV9jaG9pY2UiCmJ5dGVjIDExIC8vICJIZWFkcyIKYXBwX2dsb2JhbF9wdXQKYiBjaGVja2NvcnJlY3RpbnB1dF8xMF9sNgpjaGVja2NvcnJlY3RpbnB1dF8xMF9sODoKcmV0c3ViCgovLyB0b19sb3dlcgp0b2xvd2VyXzExOgpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmludGNfMCAvLyAwCmZyYW1lX2RpZyAtMQpsZW4KY2FsbHN1YiBydGxfMTIKcmV0c3ViCgovLyBydGwKcnRsXzEyOgpwcm90byAzIDEKZnJhbWVfZGlnIC0yCmZyYW1lX2RpZyAtMQo+PQpibnogcnRsXzEyX2w0CmZyYW1lX2RpZyAtMwpmcmFtZV9kaWcgLTIKZ2V0Ynl0ZQpwdXNoaW50IDY1IC8vIDY1Cj49CmZyYW1lX2RpZyAtMwpmcmFtZV9kaWcgLTIKZ2V0Ynl0ZQpwdXNoaW50IDkwIC8vIDkwCjw9CiYmCmJueiBydGxfMTJfbDMKZnJhbWVfZGlnIC0zCmZyYW1lX2RpZyAtMgppbnRjXzEgLy8gMQorCmZyYW1lX2RpZyAtMQpjYWxsc3ViIHJ0bF8xMgpiIHJ0bF8xMl9sNQpydGxfMTJfbDM6CmZyYW1lX2RpZyAtMwpmcmFtZV9kaWcgLTIKZnJhbWVfZGlnIC0zCmZyYW1lX2RpZyAtMgpnZXRieXRlCnB1c2hpbnQgMzIgLy8gMzIKKwpzZXRieXRlCmZyYW1lX2RpZyAtMgppbnRjXzEgLy8gMQorCmZyYW1lX2RpZyAtMQpjYWxsc3ViIHJ0bF8xMgpiIHJ0bF8xMl9sNQpydGxfMTJfbDQ6CmZyYW1lX2RpZyAtMwpydGxfMTJfbDU6CnJldHN1YgoKLy8gaGVsbG9fY2FzdGVyCmhlbGxvY2FzdGVyXzEzOgpwcm90byAwIDAKYnl0ZWNfMCAvLyAiIgpkdXAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpmcmFtZV9idXJ5IDEKZnJhbWVfZGlnIDEKY2FsbHN1YiBoZWxsb18wCmZyYW1lX2J1cnkgMApieXRlYyA2IC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIHN0YXJ0X2dhbWVfY2FzdGVyCnN0YXJ0Z2FtZWNhc3Rlcl8xNDoKcHJvdG8gMCAwCmJ5dGVjXzAgLy8gIiIKaW50Y18wIC8vIDAKYnl0ZWNfMCAvLyAiIgp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmZyYW1lX2J1cnkgMgp0eG4gR3JvdXBJbmRleAppbnRjXzEgLy8gMQotCmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgMQpndHhucyBUeXBlRW51bQppbnRjXzEgLy8gcGF5Cj09CmFzc2VydApmcmFtZV9kaWcgMQpmcmFtZV9kaWcgMgpjYWxsc3ViIHN0YXJ0Z2FtZV8zCmZyYW1lX2J1cnkgMApieXRlYyA2IC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIGpvaW5fZ2FtZV9jYXN0ZXIKam9pbmdhbWVjYXN0ZXJfMTU6CnByb3RvIDAgMApieXRlY18wIC8vICIiCmludGNfMCAvLyAwCnR4biBHcm91cEluZGV4CmludGNfMSAvLyAxCi0KZnJhbWVfYnVyeSAxCmZyYW1lX2RpZyAxCmd0eG5zIFR5cGVFbnVtCmludGNfMSAvLyBwYXkKPT0KYXNzZXJ0CmZyYW1lX2RpZyAxCmNhbGxzdWIgam9pbmdhbWVfNApmcmFtZV9idXJ5IDAKYnl0ZWMgNiAvLyAweDE1MWY3Yzc1CmZyYW1lX2RpZyAwCmNvbmNhdApsb2cKcmV0c3ViCgovLyByZXNvbHZlX2Nhc3RlcgpyZXNvbHZlY2FzdGVyXzE2Ogpwcm90byAwIDAKYnl0ZWNfMCAvLyAiIgppbnRjXzAgLy8gMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKZnJhbWVfYnVyeSAxCmZyYW1lX2RpZyAxCmNhbGxzdWIgcmVzb2x2ZV81CmZyYW1lX2J1cnkgMApieXRlYyA2IC8vIDB4MTUxZjdjNzUKZnJhbWVfZGlnIDAKY29uY2F0CmxvZwpyZXRzdWIKCi8vIGNoZWNrX3dpbnNfY2FzdGVyCmNoZWNrd2luc2Nhc3Rlcl8xNzoKcHJvdG8gMCAwCmludGNfMCAvLyAwCmNhbGxzdWIgY2hlY2t3aW5zXzYKZnJhbWVfYnVyeSAwCmJ5dGVjIDYgLy8gMHgxNTFmN2M3NQpmcmFtZV9kaWcgMAppdG9iCmNvbmNhdApsb2cKcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 4,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "player_a_account": {
                    "type": "bytes",
                    "key": "player_a_account",
                    "descr": "First player's account"
                },
                "player_a_choice": {
                    "type": "bytes",
                    "key": "player_a_choice",
                    "descr": "First player's side of the coin"
                },
                "player_b_account": {
                    "type": "bytes",
                    "key": "player_b_account",
                    "descr": "Second player's account"
                },
                "player_b_choice": {
                    "type": "bytes",
                    "key": "player_b_choice",
                    "descr": "Second player's side of the coin"
                },
                "wager": {
                    "type": "uint64",
                    "key": "wager",
                    "descr": "Betting amount for the coinflip"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "player_games_won": {
                    "type": "uint64",
                    "key": "player_games_won",
                    "descr": "Amount of coinflip games won"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "coinflip",
        "methods": [
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "start_game",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    },
                    {
                        "type": "string",
                        "name": "choice"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Player A initiates the game, he pays the wager he wants for the game and then chooses the side of the coin (\"Heads\" or \"Tails\")"
            },
            {
                "name": "join_game",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Player B joins the game, gets the side that's left (player A picks first), pays the wager and waits for the game to resolve by player A"
            },
            {
                "name": "resolve",
                "args": [
                    {
                        "type": "account",
                        "name": "opp"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Player A resolves the game, win counter updates and the wager pays out to the player who won"
            },
            {
                "name": "check_wins",
                "args": [],
                "returns": {
                    "type": "uint64"
                },
                "desc": "Check personal number of coinflip wins"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "opt_in": "CALL"
    }
}